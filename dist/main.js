(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>m});var o=t(537),a=t.n(o),r=t(645),i=t.n(r),c=t(667),A=t.n(c),d=new URL(t(407),t.b),p=new URL(t(437),t.b),s=i()(a()),u=A()(d),l=A()(p);s.push([n.id,"@font-face {\n    font-family: 'Century Std';\n    src: url("+u+") format('woff2'),\n      url("+l+") format('woff');\n    font-weight: 600;\n    font-style: normal;\n  }\n\nbody {\n    background-color: #fffcf5;\n}\n\nh5 {\n    font-size: 3rem;\n    padding:0;\n    margin:0;\n}\n\np {\n   font-size: 1.5rem;\n   margin-top: none;\n   font-family: Arial, Helvetica, sans-serif;\n}\n\nimg {\n    margin: 0;\n    padding: 0;\n}\n\n#navBar {\n    display: flex;\n    flex-direction: row;\n    gap: 80px;\n    justify-content: center;\n    align-items: center;\n    padding: 10px;\n    background-color: #faf5e7;\n}\n\n.navButton {\n    border: none;\n    background-color: #faf5e7;\n    font-family: sans-serif;\n    font-size: 2rem;\n}\n\n#homeButton {\n    font-size: 4rem;\n    font-family: 'Century Std';\n    margin-top: 15px;\n}\n\n#homeContent {\n    display: flex;\n    flex-direction: row;\n    gap: 30px;\n    justify-content: space-between;\n    align-items: center;\n    background-color: white;\n    padding: 10px;\n    width: 80%;\n    margin: 40px auto 40px auto;\n    padding: 0;\n    height: 500px;\n}\n\n#homeContent > img {\n    height: 500px;\n}\n\n#homeText {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    margin-right: 50px;\n    padding: 15px 40px 15px 40px;\n    background-color:  #fffcf5;\n}\n\n#homeText > h3 {\n    font-size: 2.5rem;\n    font-family: 'Century Std';\n    padding: 0;\n    margin-bottom: 10px;\n}\n\n#homeText > p {\n    font-size: 1rem;\n    margin-top: 5px;\n    margin-bottom: none;\n    padding: none;\n\n}\n\n#menuContainer {\n    background-color: #fffcf5;\n}\n\n.foodContainer {\n    display: flex;\n    width: 60%;\n    justify-content: space-between;\n    align-items: center;\n    background-color: white;\n    margin: 0px auto 0px auto;\n}\n\n.foodText {\n    width: 30%;\n    margin: 50px;\n}\n\n#homeButton {\n    font-size: 4rem;\n    font-family: 'Century Std';\n    margin-top: 15px;\n}\n\n#aboutContent {\n    display: flex;\n    flex-direction: row;\n    gap: 30px;\n    justify-content: space-between;\n    align-items: center;\n    background-color: white;\n    padding: 10px;\n    width: 80%;\n    margin: 40px auto 40px auto;\n    padding: 0;\n    height: 500px;\n}\n\n#aboutContent > img {\n    height: 500px;\n}\n\n#aboutText {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    margin-right: 50px;\n    padding: 15px 40px 15px 40px;\n}\n\n#aboutText > h3 {\n    font-size: 2.5rem;\n    font-family: 'Century Std';\n    padding: 0;\n    margin-bottom: 10px;\n}\n\n#aboutText > p {\n    font-size: 1rem;\n    margin-top: 5px;\n    margin-bottom: none;\n    padding: none;\n\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,0BAA0B;IAC1B;4DACuD;IACvD,gBAAgB;IAChB,kBAAkB;EACpB;;AAEF;IACI,yBAAyB;AAC7B;;AAEA;IACI,eAAe;IACf,SAAS;IACT,QAAQ;AACZ;;AAEA;GACG,iBAAiB;GACjB,gBAAgB;GAChB,yCAAyC;AAC5C;;AAEA;IACI,SAAS;IACT,UAAU;AACd;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,SAAS;IACT,uBAAuB;IACvB,mBAAmB;IACnB,aAAa;IACb,yBAAyB;AAC7B;;AAEA;IACI,YAAY;IACZ,yBAAyB;IACzB,uBAAuB;IACvB,eAAe;AACnB;;AAEA;IACI,eAAe;IACf,0BAA0B;IAC1B,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,SAAS;IACT,8BAA8B;IAC9B,mBAAmB;IACnB,uBAAuB;IACvB,aAAa;IACb,UAAU;IACV,2BAA2B;IAC3B,UAAU;IACV,aAAa;AACjB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,kBAAkB;IAClB,4BAA4B;IAC5B,0BAA0B;AAC9B;;AAEA;IACI,iBAAiB;IACjB,0BAA0B;IAC1B,UAAU;IACV,mBAAmB;AACvB;;AAEA;IACI,eAAe;IACf,eAAe;IACf,mBAAmB;IACnB,aAAa;;AAEjB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,aAAa;IACb,UAAU;IACV,8BAA8B;IAC9B,mBAAmB;IACnB,uBAAuB;IACvB,yBAAyB;AAC7B;;AAEA;IACI,UAAU;IACV,YAAY;AAChB;;AAEA;IACI,eAAe;IACf,0BAA0B;IAC1B,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,SAAS;IACT,8BAA8B;IAC9B,mBAAmB;IACnB,uBAAuB;IACvB,aAAa;IACb,UAAU;IACV,2BAA2B;IAC3B,UAAU;IACV,aAAa;AACjB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,kBAAkB;IAClB,4BAA4B;AAChC;;AAEA;IACI,iBAAiB;IACjB,0BAA0B;IAC1B,UAAU;IACV,mBAAmB;AACvB;;AAEA;IACI,eAAe;IACf,eAAe;IACf,mBAAmB;IACnB,aAAa;;AAEjB",sourcesContent:["@font-face {\n    font-family: 'Century Std';\n    src: url('./CenturyStd-BookCondensed.woff2') format('woff2'),\n      url('./CenturyStd-BookCondensed.woff') format('woff');\n    font-weight: 600;\n    font-style: normal;\n  }\n\nbody {\n    background-color: #fffcf5;\n}\n\nh5 {\n    font-size: 3rem;\n    padding:0;\n    margin:0;\n}\n\np {\n   font-size: 1.5rem;\n   margin-top: none;\n   font-family: Arial, Helvetica, sans-serif;\n}\n\nimg {\n    margin: 0;\n    padding: 0;\n}\n\n#navBar {\n    display: flex;\n    flex-direction: row;\n    gap: 80px;\n    justify-content: center;\n    align-items: center;\n    padding: 10px;\n    background-color: #faf5e7;\n}\n\n.navButton {\n    border: none;\n    background-color: #faf5e7;\n    font-family: sans-serif;\n    font-size: 2rem;\n}\n\n#homeButton {\n    font-size: 4rem;\n    font-family: 'Century Std';\n    margin-top: 15px;\n}\n\n#homeContent {\n    display: flex;\n    flex-direction: row;\n    gap: 30px;\n    justify-content: space-between;\n    align-items: center;\n    background-color: white;\n    padding: 10px;\n    width: 80%;\n    margin: 40px auto 40px auto;\n    padding: 0;\n    height: 500px;\n}\n\n#homeContent > img {\n    height: 500px;\n}\n\n#homeText {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    margin-right: 50px;\n    padding: 15px 40px 15px 40px;\n    background-color:  #fffcf5;\n}\n\n#homeText > h3 {\n    font-size: 2.5rem;\n    font-family: 'Century Std';\n    padding: 0;\n    margin-bottom: 10px;\n}\n\n#homeText > p {\n    font-size: 1rem;\n    margin-top: 5px;\n    margin-bottom: none;\n    padding: none;\n\n}\n\n#menuContainer {\n    background-color: #fffcf5;\n}\n\n.foodContainer {\n    display: flex;\n    width: 60%;\n    justify-content: space-between;\n    align-items: center;\n    background-color: white;\n    margin: 0px auto 0px auto;\n}\n\n.foodText {\n    width: 30%;\n    margin: 50px;\n}\n\n#homeButton {\n    font-size: 4rem;\n    font-family: 'Century Std';\n    margin-top: 15px;\n}\n\n#aboutContent {\n    display: flex;\n    flex-direction: row;\n    gap: 30px;\n    justify-content: space-between;\n    align-items: center;\n    background-color: white;\n    padding: 10px;\n    width: 80%;\n    margin: 40px auto 40px auto;\n    padding: 0;\n    height: 500px;\n}\n\n#aboutContent > img {\n    height: 500px;\n}\n\n#aboutText {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    margin-right: 50px;\n    padding: 15px 40px 15px 40px;\n}\n\n#aboutText > h3 {\n    font-size: 2.5rem;\n    font-family: 'Century Std';\n    padding: 0;\n    margin-bottom: 10px;\n}\n\n#aboutText > p {\n    font-size: 1rem;\n    margin-top: 5px;\n    margin-bottom: none;\n    padding: none;\n\n}"],sourceRoot:""}]);const m=s},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,a,r){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var c=0;c<this.length;c++){var A=this[c][0];null!=A&&(i[A]=!0)}for(var d=0;d<n.length;d++){var p=[].concat(n[d]);o&&i[p[0]]||(void 0!==r&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=r),t&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=t):p[2]=t),a&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=a):p[4]="".concat(a)),e.push(p))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(a," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([r]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var r={},i=[],c=0;c<n.length;c++){var A=n[c],d=o.base?A[0]+o.base:A[0],p=r[d]||0,s="".concat(d," ").concat(p);r[d]=p+1;var u=t(s),l={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==u)e[u].references++,e[u].updater(l);else{var m=a(l,o);o.byIndex=c,e.splice(c,0,{identifier:s,updater:m,references:1})}i.push(s)}return i}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var r=o(n=n||[],a=a||{});return function(n){n=n||[];for(var i=0;i<r.length;i++){var c=t(r[i]);e[c].references--}for(var A=o(n,a),d=0;d<r.length;d++){var p=t(r[d]);0===e[p].references&&(e[p].updater(),e.splice(p,1))}r=A}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,a&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},437:(n,e,t)=>{n.exports=t.p+"26681bdba68c8f149baa.woff"},407:(n,e,t)=>{n.exports=t.p+"25af92cc45f871fc7c21.woff2"}},e={};function t(o){var a=e[o];if(void 0!==a)return a.exports;var r=e[o]={id:o,exports:{}};return n[o](r,r.exports,t),r.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");o.length&&(n=o[o.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,(()=>{const n=t.p+"2af8aedce57ae53cd7a9.jpeg";function e(){const e=document.querySelector("#content"),t=document.createElement("div");t.id="homeContent";const o=new Image;o.src=n,t.appendChild(o);const a=document.createElement("div");a.id="homeText";const r=document.createElement("h3");r.textContent="Wood Fired Pizza",a.appendChild(r);const i=document.createElement("p");i.textContent="Opening hours: 11am - 3pm, 7pm - 11pm.",a.appendChild(i);const c=document.createElement("p");c.textContent="12 Bowser Avenue, Hanoi, Viet Nam.",a.appendChild(c),t.appendChild(a),e.appendChild(t)}const o=t.p+"44c5bdaf532d7144ba1e.jpeg",a=t.p+"bed460eefbb5f5393848.jpeg",r=t.p+"e0e5176ff4c0abfca135.jpeg",i=t.p+"cbb2d2684ef7071f63a9.jpeg";var c=t(379),A=t.n(c),d=t(795),p=t.n(d),s=t(569),u=t.n(s),l=t(565),m=t.n(l),f=t(216),C=t.n(f),g=t(589),h=t.n(g),B=t(426),x={};function I(n){for(;n.childNodes.length>1;)n.removeChild(n.lastChild)}x.styleTagTransform=h(),x.setAttributes=m(),x.insert=u().bind(null,"head"),x.domAPI=p(),x.insertStyleElement=C(),A()(B.Z,x),B.Z&&B.Z.locals&&B.Z.locals,function(){const n=document.querySelector("#content"),e=document.createElement("div");e.id="navBar";const t=document.createElement("button");t.classList.add("navButton"),t.id="menu",t.textContent="Menu",e.appendChild(t);const o=document.createElement("button");o.classList.add("navButton"),o.id="homeButton",o.textContent="Mario's",e.appendChild(o);const a=document.createElement("button");a.classList.add("navButton"),a.id="about",a.textContent="About",e.appendChild(a),n.appendChild(e)}(),e(),document.querySelector("#menu").addEventListener("click",(function(){I(document.querySelector("#content")),function(){const n=document.querySelector("#content"),e=document.createElement("div");e.id="menuContainer";const t=document.createElement("div");t.classList.add("foodContainer");const i=new Image;i.src=o,t.appendChild(i);const c=document.createElement("div");c.classList.add("foodText");const A=document.createElement("h5");A.textContent="Parma",c.appendChild(A);const d=document.createElement("p");d.textContent="Tomato sauce, mozarella cheese, parma ham, fresh burata.",c.appendChild(d),t.appendChild(c),e.appendChild(t);const p=document.createElement("div");p.classList.add("foodContainer");const s=document.createElement("div");s.classList.add("foodText");const u=document.createElement("h5");u.textContent="Margherita",s.appendChild(u);const l=document.createElement("p");l.textContent="Tomato sauce, mozarella cheese, fresh basil.",s.appendChild(l),p.appendChild(s);const m=new Image;m.src=a,p.appendChild(m),e.appendChild(p),n.appendChild(e);const f=document.createElement("div");f.classList.add("foodContainer");const C=new Image;C.src=r,f.appendChild(C);const g=document.createElement("div");g.classList.add("foodText");const h=document.createElement("h5");h.textContent="Meat Lovers",g.appendChild(h);const B=document.createElement("p");B.textContent="Milano salami and chorizo atop our classic Margherita",g.appendChild(B),f.appendChild(g),e.appendChild(f)}()})),document.querySelector("#homeButton").addEventListener("click",(function(){I(document.querySelector("#content")),e()})),document.querySelector("#about").addEventListener("click",(function(){I(document.querySelector("#content")),function(){const n=document.querySelector("#content"),e=document.createElement("div");e.id="aboutContent";const t=new Image;t.src=i,e.appendChild(t);const o=document.createElement("div");o.id="aboutText";const a=document.createElement("h3");a.textContent="About Us",o.appendChild(a);const r=document.createElement("p");r.textContent="After an illustrious career as a plumber, Mario decided to take his savings and open a pizza shop",o.appendChild(r);const c=document.createElement("p");c.textContent="Although faced with tough beginnings, Mario's is now one of the top pizza joints in Viet Nam. Come and try for yourself!",o.appendChild(c),e.appendChild(o),n.appendChild(e)}()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,